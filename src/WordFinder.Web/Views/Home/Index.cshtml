@model WordFinder.Web.Models.WordsViewModel
@{    
    ViewData["Title"] = "Home Page";
}
<form asp-controller="Home" asp-action="Index" autocomplete="off" style="width:80%; align-content:center" >
    <div class="input-group" style="align-items:center">
        <input type="search" class="form-control" name="Letters" autocomplete="off" id="letters"
                   autofocus maxlength="10" min="2" placeholder="Letters" asp-for="Letters" tabindex="0">
        <input type="submit" value="Search" class="btn btn-dark" />
    </div>
    <p class="fw-lighter fst-italic" style="font-size:x-small">Maximum 10 characters with one wildcard `*` character</p>

    <div class="row align-items-center" style="margin-top:2em">
        <div class="col">
            <select class="form-select" aria-label="Minimum word length" asp-for="MinLen" name="MinLen" autocomplete="off" tabindex="1">
                <option selected value="2">2 (Min word length)</option>
                <option value="3">3</option>
                <option value="4">4</option>
                <option value="5">5</option>
                <option value="6">6</option>
                <option value="7">7</option>
            </select>
        </div>
        <div class="col">
            <input type="text" class="col-form-label" name="Contains" autocomplete="off" placeholder="Contains" asp-for="Contains" />
        </div>
        <div class="col">
            <input type="text" class="col-form-label" name="StartsWith" autocomplete="off" placeholder="Starts with ..." asp-for="StartsWith" />
        </div>
        <div class="col">
            <input type="text" class="col-form-label" name="EndsWith" autocomplete="off" placeholder="Ends with ..." asp-for="EndsWith" />
        </div>
    </div>

    @{
        if (Model != null)
        {
            if (string.IsNullOrWhiteSpace(Model.Letters) || (Model.WordGroups is null || !Model.WordGroups.Any()))
            {
                <p class="text-info"> No results :(</p>
            }
            else
            {
                <p class="text-primary" style="margin-bottom:20px">
                    @ViewData["ResultMsg"]
                </p>
                <div class="container-md">
                    @foreach (var grp in Model.WordGroups.OrderByDescending(x => x.Title))
                    {
                        <div class="card">
                            <div class="card-header">
                                @grp.Title
                            </div>
                            <div class="card-body">
                                @foreach (var word in grp.Words.OrderBy(x => x.Value))
                                {
                                    <span style="display:inline; font-weight:lighter">
                                        @word.Value
                                    </span>
                                    <span class="text-primary" style="display:inline; margin-top:10em; margin-right:15px; font-size:x-small;">
                                        @word.Points
                                    </span>
                                }
                            </div>
                        </div>
                    }
                </div>  
            }          
        }
    }
</form>